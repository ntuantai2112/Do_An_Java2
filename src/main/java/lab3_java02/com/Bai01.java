/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lab3_java02.com;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO T560
 */
public class Bai01 extends javax.swing.JFrame {

    // khởi tạo defaultModel
    private DefaultTableModel tblModel;
    // khởi tạo dtg list
    private List<Student> list = new ArrayList<>();

    /**
     * Creates new form Bai01
     */
    public Bai01() {
        initComponents();
        setLocationRelativeTo(null);
        initMjors();
        initData();
        intitTable();
        fillTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnsSortGrade = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        cboxMajors = new javax.swing.JComboBox<>();
        txtAbility = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CkboxBonus = new javax.swing.JCheckBox();
        txtStudent = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnSortName = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMarks = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Điểm:");

        btnRefresh.setText("Làm mới");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel4.setText("Ngành");

        btnsSortGrade.setText("Sắp xếp theo điểm");
        btnsSortGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsSortGradeActionPerformed(evt);
            }
        });

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Họ Và Tên", "Điểm", "Ngành ", "Học Lực", "Thưởng"
            }
        ));
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        cboxMajors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Công nghệ thông tin", "Tự động hóa", "Quản trị kinh doanh", "Làm đẹp " }));

        txtAbility.setEnabled(false);
        txtAbility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAbilityActionPerformed(evt);
            }
        });

        jLabel5.setText("Học lực");

        CkboxBonus.setText("Có phần thưởng ?");

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSortName.setText("Sắp xếp theo tên");
        btnSortName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Quản Lý Sinh Viên");

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setText("Họ và Tên:");

        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(436, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(cboxMajors, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnSortName)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnsSortGrade))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CkboxBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAbility)
                                    .addComponent(txtMarks, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtStudent, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRefresh)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(169, 169, 169)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(18, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel3)
                .addContainerGap(348, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(jLabel1)
                    .addGap(25, 25, 25)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGap(18, 18, 18)
                    .addComponent(txtMarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cboxMajors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtAbility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(CkboxBonus)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd)
                        .addComponent(btnDelete)
                        .addComponent(btnUpdate)
                        .addComponent(btnRefresh))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSortName)
                        .addComponent(btnsSortGrade))
                    .addContainerGap(10, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAbilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAbilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAbilityActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateStudent();
        btnRefreshActionPerformed(evt);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMouseClicked
        showDetail();
    }//GEN-LAST:event_tblStudentMouseClicked

    private void btnsSortGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsSortGradeActionPerformed
        // TODO add your handling code here:
        sortGrade();
    }//GEN-LAST:event_btnsSortGradeActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        txtStudent.setText("");
        txtAbility.setText("");
        txtMarks.setText("");
        CkboxBonus.setSelected(false);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //TODO add your handling code here:
        if (txtStudent.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Họ tên muốn xóa!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        for (Student student : list) {
            if (student.getName().equals(txtStudent.getText())) {
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa không ?", "Delete", JOptionPane.YES_NO_OPTION);
                if (choice == JOptionPane.YES_OPTION) {
                    list.remove(student);
                    fillTable();
                    JOptionPane.showMessageDialog(this, "Đã xóa thành công");
                }
            }

        }
        JOptionPane.showMessageDialog(this, "Người dùng không tồn tại");
        deleteStudent();
        btnRefreshActionPerformed(evt);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSortNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortNameActionPerformed
        // TODO add your handling code here:
        sortName();
    }//GEN-LAST:event_btnSortNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        addStudent();
        btnRefreshActionPerformed(evt);
    }//GEN-LAST:event_btnAddActionPerformed
    // Thay đổi combobox bằng code

    public void initMjors() {
        // tạo bảng objeect chứa tên combobox
        String[] major = new String[]{"Công nghệ thông tin", "Kinh doang", "Tự động hóa", "Làm đẹp"};
        // tạo đối tượng defaultCombobox rồi setModel , model là kiểu dáng phong cách
        DefaultComboBoxModel<String> boxModel = new DefaultComboBoxModel<>(major);
        cboxMajors.setModel(boxModel);
    }

// Thay đổi tên cột bằng code,
    public void initTable() {
        tblModel = new DefaultTableModel();
        
        tblStudent.setModel(tblModel);
    }
    //tạo hàm initData 
    public void initData() {
        list.add(new Student("tuantai", 10, "Công nghệ thông tin"));
        list.add(new Student("tuantu", 8, "Tự động hóa"));
        list.add(new Student("văn phong", 5, "Kinh doanh"));
        list.add(new Student("trang", 7, "Làm đẹp"));
        list.add(new Student("tahnh tùng", 9, "Công nghệ thông tin"));
    }

    // Khởi tạo hàm fillTable ,  get Model rồi sửa 
    public void intitTable() {
        // lấy ra table hiện tại
        tblModel = (DefaultTableModel) tblStudent.getModel();
        String[] cols = new String[]{"Họ và tên", "Điểm", "Ngành", "Học lực", "Thưởng"};
        tblModel.setColumnIdentifiers(cols);

    }

    public void fillTable() {
        // quét hết các dữ liệu trong mảng và đưa lên trên bảng
        // ta phải clean dữ liệu cũ ở trong bảng 
        // setRowCount(0) xóa các dữ liệu các hàng trong bảng
        tblModel.setRowCount(0);
        for (Student sv : list) {
            // khai báo mảng đối tượng
            Object[] row = new Object[]{sv.getName(), sv.getMarks(), sv.getMajor(), sv.getGrade(), sv.isBonus()};
            tblModel.addRow(row);

        }
//        tblModel.fireTableDataChanged();
    }

    public void addStudent() {
        // validate form
        if (txtStudent.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập Họ tên!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String Number = null;
        if (new String(txtMarks.getText()).equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập điểm", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Student sv = new Student();
        sv.setName(txtStudent.getText());
        // txtMarks.getText() trả về cho ta 1 String mà , marks là kiểu double nên ta phải ép kiểu 
        sv.setMarks(Double.parseDouble(txtMarks.getText()));
        // Majors là Combobox nên ta  
        sv.setMajor((String) cboxMajors.getSelectedItem());
        txtAbility.setText(sv.getGrade());
        CkboxBonus.setSelected(sv.isBonus());
        list.add(sv);
        fillTable();
        JOptionPane.showMessageDialog(this, "Thêm sinh viên thành công!");

    }

    // Xóa Student
    public void deleteStudent() {
//       

        int index = tblStudent.getSelectedRow();
        list.remove(index);
        fillTable();
        JOptionPane.showMessageDialog(this, "Đã xóa thành công");

//        
    }

    // tạo hàm showDetail để khi click vào table hiện thị thông tin lên màn hình
    public void showDetail() {
        // lấy ra hàng trong table
        int select = tblStudent.getSelectedRow();

        // kiểm tra điều kiện
        if (select >= 0) {
            // lấy ra user name
            String username = (String) tblModel.getValueAt(select, 0);

            for (Student sv : list) {
                if (sv.getName().equals(username)) {
                    txtStudent.setText(sv.getName());
                    txtMarks.setText((String.valueOf(sv.getMarks())));
                    cboxMajors.setSelectedItem(sv.getMajor());
                    txtAbility.setText(sv.getGrade());
                    CkboxBonus.setSelected(sv.isBonus());
                }
            }
        }
    }

    // làm chức năng cập nhật thông tin sinh viên 
    public void updateStudent() {
        
        int index = tblStudent.getSelectedRow();
        if (index >= 0) {
            Student sv = list.get(index);
            sv.setName(txtStudent.getText());
            // txtMarks.getText() trả về cho ta 1 String mà , marks là kiểu double nên ta phải ép kiểu 
            sv.setMarks(Double.parseDouble(txtMarks.getText()));
            // Majors là Combobox nên ta  
            sv.setMajor((String) cboxMajors.getSelectedItem());
            txtAbility.setText(sv.getGrade());
            CkboxBonus.setSelected(sv.isBonus());
//        list.add(sv);
            fillTable();
            JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sinh viên muốn cập nhật!");

        }
    }
    
    // Code hàm sắp xếp
    public void sortName(){
        // sd biểu thức lamda sắp xếp
        // CompareTo để so sánh 2 chuỗi kí tự
       Collections.sort(list,(sv1,sv2) -> (sv1.getName().compareTo(sv2.getName())));
       fillTable();
    }
    // Tạo hàm sắp xếp theo điểm
    public void sortGrade(){
        // Hàm compare trả về gtri int 
        // Nếu trả về giá trị là int, nếu thuộc tính trừ đi cho nhau ra -1,1 hoặc 0 
        // Nếu sv1 - sv2 trả về gtri -1 thì sv1 <sv 2 theo thứ tự tăng dần thì sv1 đứng trc
        Collections.sort(list,(sv1,sv2) -> (int) (sv1.getMarks() - sv2.getMarks() ));
       fillTable();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bai01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bai01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bai01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bai01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bai01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CkboxBonus;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSortName;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnsSortGrade;
    private javax.swing.JComboBox<String> cboxMajors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextField txtAbility;
    private javax.swing.JTextField txtMarks;
    private javax.swing.JTextField txtStudent;
    // End of variables declaration//GEN-END:variables
}
